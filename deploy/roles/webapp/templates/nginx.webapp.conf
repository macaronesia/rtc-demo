upstream webapp_server {
	server unix:{{ webapp_socket_path }} fail_timeout=0;
}

server {
	listen 80 default_server;
	listen [::]:80 default_server;

	return 302 https://$host$request_uri;
}

server {
	listen				443 ssl http2 default_server;
	listen				[::]:443 ssl http2 default_server;
	access_log			/var/log/nginx/webapp_access.log;
	error_log			/var/log/nginx/webapp_error.log;

	ssl_certificate			{{ ssl_cert_bundle_dir_path }}/{{ ssl_cert_bundle_file_name }};
	ssl_certificate_key		{{ ssl_private_key_dir_path }}/{{ ssl_private_key_file_name }};
	ssl_session_timeout		1d;
	ssl_session_cache		shared:SSL:50m;
	ssl_session_tickets		off;

	ssl_dhparam			{{ ssl_dh_param_file_path }};

	ssl_protocols			TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers			'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
	ssl_prefer_server_ciphers	on;

	ssl_stapling			on;
	ssl_stapling_verify		on;

	ssl_trusted_certificate		{{ ssl_cert_bundle_dir_path }}/{{ ssl_cert_bundle_file_name }};

	resolver			233.5.5.5 233.6.6.6 valid=300s;

	location ~ ^{{ webapp_api_url_prefix }}/socket.io/(.*)$ {
		proxy_http_version	1.1;
		proxy_buffering		off;
		proxy_set_header	Upgrade $http_upgrade;
		proxy_set_header	Connection "Upgrade";
		proxy_pass		http://webapp_server/socket.io/$1$is_args$args;
	}

	location ~ ^{{ webapp_api_url_prefix }}/(.*)$ {
		proxy_set_header	X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header	X-Forwarded-Proto $scheme;
		proxy_set_header	Host $host;
		proxy_set_header	X-Script-Name {{ webapp_api_url_prefix }};
		proxy_redirect		off;
		proxy_pass		http://webapp_server/$1$is_args$args;
	}

	location ~ ^/(.*)$ {
		alias {{ client_home_dir_path }}/$1;
		expires -1;
	}
}
